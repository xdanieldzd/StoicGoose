<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ output extension=".cs" #>
<# var types = new Type[] { typeof(byte), typeof(sbyte), typeof(ushort), typeof(short), typeof(uint), typeof(int) }; #>
using System;
namespace StoicGoose.Common.Utilities
{
public static class BitHandling
{
<# foreach (var type in types) { #>
public static void ChangeBit(ref <#= type.Name #> value, int bit, bool state)
{
	if (state) value |= (<#= type.Name #>)(1 << bit);
	else value &= (<#= type.Name #>)~(1 << bit);
}
public static bool IsBitSet(<#= type.Name #> value, int bit) => (value & (1 << bit)) != 0;
<# } #>
}
}
