<#@ include file="$(TemplateIncludeFolder)\Header.ttinclude" #>
<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ output extension=".g.cs" #>
<# var types = new [] { "byte", "sbyte", "ushort", "short", "uint", "int" }; #>

namespace StoicGoose.Common.Utilities
{
	public static class BitHandling
	{
<# foreach (var type in types) { #>
		public static bool IsBitSet(<#= type #> value, int bit) => (value & (1 << bit)) != 0;
		public static void ChangeBit(ref <#= type #> value, int bit, bool state)
		{
			if (state) value |= (<#= type #>)(1 << bit);
			else value &= (<#= type #>)~(1 << bit);
		}
<# } #>
	}
}
